{"version":3,"sources":["screen/signin.js","screen/dashboard.js","router.js","app.js","index.js"],"names":["SigninScreen","useState","type","setType","navigate","useNavigate","submit","a","username","password","console","log","axios","post","withCredentials","result","status","state","data","admin","message","error","method","url","headers","justify","gutter","className","style","marginBottom","shape","size","onClick","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","autoComplete","Item","label","rules","required","Password","offset","htmlType","FormComponent","getLogs","getMyUsers","number","then","success","catch","e","DashboardScreen","useLocation","users","setUsers","logs","setLogs","useEffect","get","margin","backgroundColor","warning","marginLeft","marginRight","map","user","i","adminName","AppRouter","path","element","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d1bcb4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Form, Input, Button, Row, Col, message } from \"antd\";\nimport axios from \"axios\";\n\nfunction SigninScreen() {\n  const [type, setType] = useState(\"sign in\");\n\n  const navigate = useNavigate();\n\n  const submit = async ({ username, password }) => {\n    console.log(username, \" \", password);\n\n    // sign in request to the server\n    if (type === \"sign in\") {\n      try {\n        const result = await axios.post(\n          \"http://localhost:4000/api/v1/admin/signin\",\n          {\n            username,\n            password,\n          },\n          { withCredentials: true }\n        );\n\n        console.log(\"result: \", result);\n        if (result.status === 200) {\n          navigate(\"/dashboard\", { state: { username: result.data.data.admin.username } });\n        }\n      } catch (e) {\n        console.log(e);\n        message.error(\"no user found\");\n      }\n      // sing up requres to the server\n    } else {\n      const result = await axios({\n        method: \"post\",\n        url: \"http://localhost:4000/api/v1/admin/signup\",\n        data: {\n          username,\n          password,\n        },\n        headers: { withCredentials: true },\n      });\n      console.log(\"result: \", result);\n      if (result.status === 201) {\n        navigate(\"/dashboard\", { state: { username: result.data.data.admin.username } });\n      }\n    }\n  };\n\n  return (\n    <Row justify=\"center\" gutter={[0, 40]}>\n      <div className=\"singinBox\">\n        <Row justify=\"center\" gutter={[20]} style={{ marginBottom: \"20px\" }}>\n          <Col>\n            <Button type=\"primary\" shape=\"round\" size={\"middle\"} onClick={() => setType(\"sign in\")}>\n              Sign in\n            </Button>\n          </Col>\n\n          <Col>\n            <Button type=\"primary\" shape=\"round\" size={\"middle\"} onClick={() => setType(\"sign up\")}>\n              Sign up\n            </Button>\n          </Col>\n        </Row>\n        <Form\n          name=\"singin\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={submit}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              {type}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </Row>\n  );\n}\n\nexport default SigninScreen;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport { Form, Input, Button, Row, Space, Col, message } from \"antd\";\nimport axios from \"axios\";\n\nfunction DashboardScreen() {\n  const navigate = useNavigate();\n\n  const { state } = useLocation();\n  const username = state.username;\n  console.log(\"username: \", username);\n\n  const [users, setUsers] = useState([]);\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    getMyUsers();\n  }, []);\n\n  // it get all logs\n  const getLogs = () => {\n    axios(\"http://localhost:4000/api/v1/admin/getlogs\", {\n      withCredentials: true,\n    })\n      .then((result) => {\n        console.log(\"result: \", result);\n        if (result.status === 200) setLogs(result.data.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const getMyUsers = () => {\n    axios\n      .get(\"http://localhost:4000/api/v1/admin/get-my-users\", {\n        withCredentials: true,\n      })\n      .then((result) => {\n        console.log(\"result: \", result);\n        if (result.status === 200) setUsers(result.data.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const logout = () => {\n    axios\n      .get(\"http://localhost:4000/api/v1/admin/signout\", {\n        withCredentials: true,\n      })\n      .then((result) => {\n        console.log(\"result: \", result);\n        message.warning(\"you logged out successfully\");\n        navigate(\"/\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div style={{ margin: \"50px\" }}>\n      <div>\n        <p>your name is: {username}</p>\n      </div>\n      <Row justify=\"space-between\">\n        <Col>\n          <FormComponent getMyUsers={getMyUsers} />\n        </Col>\n        <Col>\n          <Space>\n            <Button style={{ backgroundColor: \"lightgreen\" }} onClick={getLogs}>\n              get logs\n            </Button>\n            <Button style={{ backgroundColor: \"red\" }} onClick={logout}>\n              log out\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      <Row justify=\"space-between\" style={{ marginLeft: \"50px\", marginRight: \"5px\" }}>\n        <Col>\n          {users.map((user, i) => {\n            return (\n              <div key={i + 100}>\n                <span>\n                  {user.name} - {user.number}\n                </span>\n              </div>\n            );\n          })}\n        </Col>\n        <Col>\n          {logs.map((log, i) => {\n            return (\n              <div key={i}>\n                <span>\n                  {log.name} - {log.number} - {log.adminName}\n                </span>\n              </div>\n            );\n          })}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nconst FormComponent = ({ getLogs, getMyUsers }) => {\n  const submit = async ({ name, number }) => {\n    console.log(name, \" \", number);\n\n    axios\n      .post(\n        \"http://localhost:4000/api/v1/user/createUser\",\n        {\n          name,\n          number,\n        },\n        { withCredentials: true }\n      )\n      .then((result) => {\n        console.log(\"result: \", result);\n        if (result.status === 200) {\n          message.success(\"user created successfully\");\n        }\n        getMyUsers();\n      })\n      .catch((e) => {\n        console.log(\"error: \", e);\n        message.error(\"please signin first\");\n      });\n  };\n\n  return (\n    <Form\n      name=\"singin\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={submit}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your username!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"number\"\n        name=\"number\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          create user\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default DashboardScreen;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport SigninScreen from \"./screen/signin.js\";\nimport DashboardScreen from \"./screen/dashboard.js\";\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<SigninScreen />} />\n        <Route exact path=\"/signin\" element={<SigninScreen />} />\n        <Route exact path=\"/signup\" element={<SigninScreen />} />\n        <Route exact path=\"/dashboard\" element={<DashboardScreen />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React from \"react\";\n\nimport AppRouter from \"./router\";\n\nfunction App() {\n  return <AppRouter />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}